{
  "swagger": "2.0",
  "info": {
    "description": "A food delivery service app for a restaurant.",
    "version": "1.0.0",
    "title": "Fast-Food-Fast",
    "contact": {
      "email": "ottimothy@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Fast-Food-Fast",
      "description": "",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://fffastapp.herokuapp.com/api/v1"
      }
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth User Sign Up"
        ],
        "description": "Creating new user into the Application",
        "parameters": [{
          "name": "signup",
          "in": "body",
          "description": "User to create an account",
          "schema": {
            "$ref": "#/definitions/User"
          }
        }],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "New user is created",
            "schema": {
              "properties": {
                "token": {
                 "type": "string"
                },
                "role" : {
                  "type": "integer"
                },
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "email": {
                  "type": "string",
                  "uniqueItems": true
                },
                "phone": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "zipcode": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth User Sign In"
        ],
        "description": "Sign in to application",
        "parameters": [{
          "name": "signin",
          "in": "body",
          "description": "Allows users to login to their account",
          "schema": {
            "$ref": "#/definitions/User"
          }
        }],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Existing users can login to their account",
            "schema": {
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "parameters": [
        {
        "name": "Order",
        "in": "header",
        "required": true,
        "description": "Authorization header",
        "type": "string"
      }
      ],
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get all Orders",

        "responses": {
          "200": {
            "description": "Gets all Orders the users made",
            "schema": {
              "properties": {
                "status": "string",
                "data": {
                  "message": "string",
                  "Orders": [{
                    "id": "number",
                    "menuId": "integer",
                    "orderedby": "integer",
                    "quantity": "number",
                    "totalprice": "number",
                    "timeordered": "string",
                    "created_date": "string"
                  }]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Make an Order",

        "responses": {
          "200": {
            "description": "A user should make an order ",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "parameters": [{
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Authorization header",
        "type": "string"
      }],
      "get": {
        "tags": [
          "orders/{id}"
        ],
        "summary": "Get a Particular Order",

        "responses": {
          "200": {
            "description": "A specific Order",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      },
      "put": {
        "tags": [
          "orders/{id}"
        ],
        "summary": "Update the status of an Order ",

        "responses": {
          "200": {
            "description": "An Order status can be new, rejected, completed or processing",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      },
       "delete": {
        "summary": "Delete an order with a given ID",
        "tags": [
          "orders/{id}"
        ],
        "responses": {
          "200": {
            "description": "Order is deleted",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    },
    "/user/{userId}/orders": {
      "parameters": [{
        "name": "userId",
        "in": "path",
        "required": true,
        "description": "Authorization header",
        "type": "string"
      }, {
        "name": "User Id",
        "in": "path",
        "required": true,
        "description": "ID of a user that made an order",
        "type": "string"
      }],
      "get": {
        "tags": [
          "user/{userId}/orders"
        ],
        "summary": "Get all orders by a particular User",
        "responses": {
          "200": {
            "description": "Get all the orders made by a specific User",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    },
    
    "/menus": {
      "parameters": [{
        "name": "auth",
        "in": "headers",
        "required": true,
        "description": "Authorization header",
        "type": "string"
      }],
      "get": {
        "tags": [
          "Menus"
        ],
        "summary": "Get all Menus",

        "responses": {
          "200": {
            "description": "Gets all Menus",
            "schema": {
              "properties": {
                "status": "string",
                "data": {
                  "message": "string",
                  "Orders": [{
                    "id": "number",
                    "name": "string",
                    "description": "string",
                    "image": "string",
                    "price": "number",
                    "categoryId": "integer",
                    "isAvailable": "boolean",
                    "created_date" : "string"
                  }]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Menus"
        ],
        "summary": "Create a Menu",

        "responses": {
          "200": {
            "description": "An Admin user can create a Menu ",
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          }
        }
      }
    },
    "/menus/{id}": {
      "parameters": [{
        "name": "id",
        "in": "path",
        "required": true,
        "description": "Authorization header",
        "type": "string"
      }],
      "get": {
        "tags": [
          "menus/{id}"
        ],
        "summary": "Get a Particular Menu",

        "responses": {
          "200": {
            "description": "A specific Order",
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          }
        }
      },
      "put": {
        "tags": [
          "menus/{id}"
        ],
        "summary": "Update a Menu ",

        "responses": {
          "200": {
            "description": "Update any data of the Menu",
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          }
        }
      },
       "delete": {
        "summary": "Delete a Menu with a given ID",
        "tags": [
          "menus/{id}"
        ],
        "responses": {
          "200": {
            "description": "Menu is deleted",
            "schema": {
              "$ref": "#/definitions/Menu"
            }
          }
        }
      }
    }
  },

  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "menuId": {
          "$ref": "#/definitions/Menu"
        },
        "quantity": {
          "type": "number"
        },
        "created_date": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "new",
            "processing",
            "completed",
            "cancelled"
          ]
        },
        "totalprice": {
          "type": "number"
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "zipcode" : {
          "type" : "string"
        },
        "role": {
          "type": "integer",
          "format": "int32",
          "description": "User role"
        },
        "city" : {
          "type" : "string"
        },
        "address" : {
          "type" : "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    
    "Menu": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "created_date": {
          "type": "string",
          "format": "date-time"
        },
        "image": {
          "type": "string"
        
        },
        "price": {
          "type": "number"
        },
        "category":{
          "$ref": "#/definitions/Category"
        },
        "isAvailable": {
          "type": "boolean",
          "default": true
        }
      },
      "xml": {
        "name": "Menu"
      }
    },
    "externalDocs": {
    "description": "Find more about Fast-Food-Fast",
    "url": "https://github.com/el-Joft/Fast-Food-Fast/readme"
    }
  }
}